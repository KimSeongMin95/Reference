[===== UE4 Console Command 모음 =====]
    - Display
        DisplayAll ClassName VariableName : 화면에 해당 클래스의 모든 객체들의 변수 값 띄우기
        Set ClassName VariableName Value : 변수 값 런타임에서 수정하기
        Display ClassObjectName VariableName : 하나의 객체의 변수 값을 런타임에 수정하기
        Set ClassName VariableName : 해당 클래스의 변수의 값을 변경 (PIE 불가능)
    - show
        show collision : 화면에 collision 표시
    - showdebug
        커스텀
    - stat (https://docs.unrealengine.com/4.27/ko/TestingAndOptimization/PerformanceAndProfiling/StatCommands/)
        stat unit
        stat fps
    - gc.ForceCollectGarbageEveryFrame 1
    - ToggleDebugCamera
        카메라를 자유롭게 제어합니다.
    

[===== UE4 Non Uinity Build 설정 방법 =====]
    - 1. BuildConfigureation.xml 수정
        <?xml version="1.0" encoding="utf-8" ?><Configuration xmlns="https://www.unrealengine.com/BuildConfiguration">
            <BuildConfiguration>
                <bUseUnityBuild>false</bUseUnityBuild>
                <bUsePCHFiles>false</bUsePCHFiles>
            </BuildConfiguration>
        </Configuration>

    - 2. MyProjectEditor.Target.cs 수정
        public class MyProjectTarget : TargetRules
        {
            public MyProjectTarget(TargetInfo Target) : base(Target)
            {
                Type = TargetType.Game;

                bUseUnityBuild = false;
                bUsePCHFiles = false;
            }
        }


[===== UE4 빌드 프로세서 개수 조절하는 방법 =====]
    - 경로
        C:\Users\ID\AppData\Roaming\Unreal Engine\UnrealBuildTool\BuildConfiguration.xml

    - BuildConfiguration.xml 파일에 다음과 같이 적어놓습니다.
        <xml version="1.0" encoding="utf-8" ?>
        <Configuration xmlns="https://www.unrealengine.com/BuildConfiguration">
            <BUildConfiguration>
            </BuildConfiguration>
            <LocalExecutor>
                <ProcessCountMultiplier>1</ProcessCountMultiplier>
                <MaxProcessorCount>12</MaxProcessorCount>
            </LocalExecutor>
            <ParallelExecutor>
                <ProcessCountMultiplier>1</ProcessCountMultiplier>
                <MaxProcessorCount>12</MaxProcessorCount>
            </ParallelExecutor>
        </Configuration>
        그러면 12개의 프로세스만 사용합니다.


[===== Within 클래스 메타지정자 =====]
    Whitin 클래스 메타지정자가 설정되면 해당 클래스의 멤버 변수로만 상요될 수 있습니다.
    다른 곳에서 사용하면 에러가 발생합니다.
    GetOuwer##ClassName()->Cast하지 않아도 바로 가져올 수 있습니다.


[===== ObjectMacros.h =====]
    RTTI를 자동으로 언리얼 빌드 툴이 구현해줍니다.


[===== LiveCoding.Compoile 콘솔 커맨드 =====]
    cpp만 간단히 수정하는 경우에는 LiveCoding.Compoile 콘솔 커맨드를 이용해서 게임 실행 중 컴파일하고 다시 DLL을 로딩해주는 기능을 이용하여 시간을 단축할 수 있습니다.
    PIE가 아닐 때도 가능합니다.


[===== Develop Editor 빌드 시 에디터 띄우지 않고 클라이언트 띄우는 방법 =====]
    Visual Studio -> 디버그 -> 명령 인수
    "(SolutionDir).MyProjectName.uproject" -skipcompile -game -log -windowed -resx=1280 -resy=720 -MyProjectNameGameMode=Client

